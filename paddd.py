#!/usr/bin/env python
# https://stackoverflow.com/questions/32786493/reversing-byte-order-in-c
def rev_endian32(x):
  return ( ((x&0xff000000) >> 24) | ((x&0x00ff0000) >> 8) | ((x&0x0000ff00) << 8) | ((x&0x000000ff) << 24) )


def rev_endian128(x):
  return (
    ((x&0xff000000000000000000000000000000) >> 120) |
    ((x&0x00ff0000000000000000000000000000) >> 104) |
    ((x&0x0000ff00000000000000000000000000) >> 88)  |
    ((x&0x000000ff000000000000000000000000) >> 72)  |
    ((x&0x00000000ff0000000000000000000000) >> 56)  |
    ((x&0x0000000000ff00000000000000000000) >> 40)  |
    ((x&0x000000000000ff000000000000000000) >> 24)  |
    ((x&0x00000000000000ff0000000000000000) >> 8)   |
    ((x&0x0000000000000000ff00000000000000) << 8)   |
    ((x&0x000000000000000000ff000000000000) << 24)  |
    ((x&0x00000000000000000000ff0000000000) << 40)  |
    ((x&0x0000000000000000000000ff00000000) << 56)  |
    ((x&0x000000000000000000000000ff000000) << 72)  |
    ((x&0x00000000000000000000000000ff0000) << 88)  |
    ((x&0x0000000000000000000000000000ff00) << 104) |
    ((x&0x000000000000000000000000000000ff) << 120)
  )


def paddd(xmm_a, xmm_b):
  ret_xmm = 0
  for i in range(0,128,32):
    a = ((xmm_a>>i)&0xffffffff)
    b = ((xmm_b>>i)&0xffffffff)
    c = rev_endian32(a) + rev_endian32(b)
    ret_xmm |= c << 96-i
  ret_xmm = rev_endian128(ret_xmm)
  return ret_xmm
